{"version":3,"sources":["TodoList.js","Footer.js","NewTodo.js","App.js","index.js"],"names":["TodoList","_ref","todos","setTodoCompleted","removeTodo","react_default","a","createElement","className","map","todo","type","onClick","id","checked","completed","title","Footer","props","allTodos","filter","setFilter","clearCompletedTodos","length","filterName","href","concat","split","letter","i","toUpperCase","join","some","NewTodo","state","newTodoTitle","handleOnChange","value","target","_this","setState","prevState","toSubmit","event","preventDefault","addTodo","this","onSubmit","placeholder","onChange","React","Component","App","currentFilter","maxId","trim","Object","toConsumableArray","objectSpread2","setAllTodosCompleted","visibleTodos","_this2","_this$state","src_NewTodo","every","htmlFor","src_TodoList","src_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e69fd2a5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, setTodoCompleted, removeTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <li className=\"\">\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            onClick={() => setTodoCompleted(todo.id)}\n            checked={todo.completed}\n          />\n          <label>{todo.title}</label>\n          <button\n            onClick={() => removeTodo(todo.id)}\n            type=\"button\"\n            className=\"destroy\"\n          />\n        </div>\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  setTodoCompleted: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = (props) => {\n  const { allTodos, filter, setFilter, clearCompletedTodos } = props;\n  const filterNames = ['all', 'active', 'completed'];\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {allTodos.filter(todo => !todo.completed).length}\n        {' '}\n        items left\n      </span>\n\n      <ul className=\"filters\">\n        {filterNames.map(filterName => (\n          <li>\n            <a\n              href={`#/${filterName}`}\n              onClick={() => setFilter(filterName)}\n              className={filter === filterName ? 'selected' : ''}\n            >\n              {filterName\n                .split('')\n                .map((letter, i) => (i === 0 ? letter.toUpperCase() : letter))\n                .join('')}\n            </a>\n          </li>\n        ))}\n      </ul>\n\n      {allTodos.some(todo => todo.completed) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={clearCompletedTodos}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  allTodos: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  clearCompletedTodos: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends React.Component {\n  state = {\n    newTodoTitle: '',\n  };\n\n  handleOnChange = ({ target: { value } }) => {\n    this.setState(prevState => ({ newTodoTitle: value }));\n  };\n\n  toSubmit = (event) => {\n    event.preventDefault();\n\n    const { newTodoTitle } = this.state;\n    const { addTodo } = this.props;\n\n    addTodo(newTodoTitle);\n\n    this.setState({\n      newTodoTitle: '',\n    });\n  };\n\n  render() {\n    const { newTodoTitle } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.toSubmit}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={newTodoTitle}\n            onChange={this.handleOnChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nNewTodo.propTypes = { addTodo: PropTypes.func.isRequired };\n\nexport default NewTodo;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Footer from './Footer';\nimport NewTodo from './NewTodo';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    currentFilter: 'all',\n    maxId: 0,\n  };\n\n  addTodo = (title) => {\n    if (title.trim()) {\n      this.setState(prevState => ({\n        todos: [...prevState.todos, {\n          title: title.trim(),\n          id: prevState.maxId + 1,\n          completed: false,\n        }],\n        maxId: prevState.maxId + 1,\n      }));\n    }\n  };\n\n  setTodoCompleted = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos\n        .map((todo) => {\n          if (todo.id === id) {\n            return {\n              ...todo,\n              completed: !todo.completed,\n            };\n          }\n\n          return { ...todo };\n        }),\n    }));\n  };\n\n  removeTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  };\n\n  setAllTodosCompleted = (checked) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        {\n          ...todo,\n          completed: checked,\n        }\n      )),\n    }));\n  };\n\n  setFilter = (filter) => {\n    this.setState(prevState => ({ currentFilter: filter }));\n  };\n\n  clearCompletedTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  render() {\n    const { currentFilter, todos } = this.state;\n    let visibleTodos;\n\n    switch (currentFilter) {\n      case 'active':\n        visibleTodos = todos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        visibleTodos = todos.filter(todo => todo.completed);\n        break;\n      default:\n        visibleTodos = [...todos];\n        break;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo addTodo={this.addTodo} />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={event => this.setAllTodosCompleted(event.target.checked)}\n            checked={\n              todos.length && todos.every(todo => todo.completed)\n            }\n          />\n\n          {todos.length !== 0\n          && <label htmlFor=\"toggle-all\">Mark all as completed</label>}\n          <TodoList\n            todos={visibleTodos}\n            setTodoCompleted={this.setTodoCompleted}\n            removeTodo={this.removeTodo}\n          />\n        </section>\n\n        {todos.length !== 0\n        && (\n          <Footer\n            allTodos={todos}\n            filter={currentFilter}\n            setFilter={this.setFilter}\n            clearCompletedTodos={this.clearCompletedTodos}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}